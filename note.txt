- Phân tích tông quan Layout chính trước
  + Phân tích thiết kế của trang
  + Header bên trên
  + Container: Sidebar trái, Content phải
- Cài đặt react-router-dom: npm i react-router-dom
  + Tạo src/pages/Home/index.js
  + Tạo src/pages/Following/index.js
- Đưa cấu hình router ra ngoài
  + Tạo src/routes/index.js
  + Tạo các list publicRoutes và privateRoutes
  + Vào App.js render các route trong publicRoutes/privateRoutes 
- Xây dựng cơ chế tải layout
  + Layout mặc định (layout chính / default layout)
    - components / Layout / DefaultLayout / index.js
  + Trong DefaultLayout chỉ tạo header và sidebar vì chúng cố định khi chuyển trang, còn content thì thay đổi nên ko define

- UI Header #2: Dùng tippy để tạo các tooltip drop down khi type vào ô input search
  npm i @tippyjs/react

- UI Header #3: Phân tích các nút trong tiktok:
  + Các nút có UI khá giống nhau nên có thể tạo 1 component rồi tái sử dụng
  + Một nút có thể tuỳ chỉnh là link hay button, nếu là chuyển trang nội bộ thì dùng thẻ Link của react-router-dom, nếu là link ra page khác thì dùng thẻ a.

- UI Header #7: 
  + Thay font family
   - Vào page tiktok, vô tab network chọn font, F5 reload lại trang
   - click phải vào từng font chọn open in new tab để save font lại
   - Đưa vào src/assets
   - Vào GlobalStyles.scss, tạo các font-face rồi đưa vào font-family của body
  + Thay Header icon
   - Tạo src/components/Icons/index.js
   - Copy outerHtml svg của tiktok
   - export component trong index.js 
  + Tạo component Image
   - Vì Image nằm trong Tippy mà Typpy chỉ nhận React Element làm children để xác định vị trí của Popper Layout
   - Nên trong comp Image phải fordward ref của <img/> ra bên ngoài, để Tippy nhận
   - Cách tạo 1 image trên web: Vào placeholder image generator online / https://placeholder.imageonline.co/
   - Cách nén 1 file ảnh: vào link: https://tinypng.com/

- Logic Header #1:
  + Tách phần search ra làm 1 comp riêng vì để chung với Header khi set State lại thì những phần ko liên quan như logo, Menu Header cũng re-render làm giảm hiệu năng   

- Logic Header #2:
  + Review kiến thức: 
    - Promise
    - Fetch Api
    - Restful Api
    - JSON  
  + Cấu trúc 1 URL: https://tiktok.fullstack.edu.vn/api/users/search?q=hoaa&type=less
    - https: Giao thức http sercure
    - tiktok.fullstack.edu.vn: host name
    - /api/users/search: path
    - ?: sau '?' là query parameters (tham số để truy ván dữ liệu)
    - Query parameters giúp backend biết cần tìm gì trong database để trả ra FE
    - Query parameters là các cặp key=value và ngăn cách nhau bởi dấu '&' nếu có nhiều parameters
    - type=less trả về tối đa 5 kết quả, type=more trả về tối đa 10 kết quả thêm key: 'meta' phân trang
  + Handle search
    - Mỗi lần gõ kí tự vào input, gọi API, trả data về render ra list search trong Popper
    - Ô input trống thì ko gọi API, Xoá ô tìm kiếm thì ko show result
    - Dùng encodeURIComponent để user nhập các kí tự đặc biệt như '/, &, :, ...' sẽ được mã hoá hết, tránh bị lỗi
    - Mỗi lần gõ kí tự xuất hiện loading, tắt clear button
    - Click vào mỗi item result link đến trang profile

- Logic Header #3:
  + Fix vấn đề mỗi lần gõ là mỗi lần request. TH gõ rõ tên thì chỉ được request 1 lần cả tên thôi
    - Dùng debounce: Khi có 1 chuỗi hành động xảy ra liên tục nhưng ta chỉ muốn bắt hành động cuối
    - Khi người dùng đang gõ liên tục rồi ngừng gõ khoảng 500ms, ta coi đó là lần gõ cuỗi cùng của họ
    - Custom 1 cái hook gọi là useDebounce

- Sử dụng Axios: (npm i/install axios)
    + Có 2 cách gọi API: XmlHTTP request vs fetchAPI
    + Axios dùng XmlHTTP request để gửi API
    + Axios có support intercept request và response:
      - intercept nghĩa là đánh chặn, có thể can thiệp trước khi gửi request hoặc trước khi nhận response
    + Có thể transform request/response data: 
      - Trước khi gửi request / nhận response có thể transform data (vd: chuyển từ key full_name thành fullName) 
    + Có thể huỷ request khi nó chưa hoàn thành
      - Khi người dùng mở 1 chức năng nào đó làm browser gửi api đến server. Tuy nhiên, người dùng lại thoát khỏi chức năng đó trước khi api được gửi xong. Lúc này axios có thể cancel request
    + Tự động convert data dạng JSON sang javascript data
      - Đối với fetch, ta phải thêm bước .json() để parse json sang javascript
      - Axios tự động parse json sang javascript luôn, ko cần ta chuyển đổi  
    + creating an instance để cấu hình cho nhiều baseUrl (endpoint) khác nhau  

- Hoàn thiện Header #1: 
    + Link logo về trang chủ
    + Sửa font ô tìm kiếm
    + Ko cho nhập kí tự đầu tiên là space trong input
    + Bỏ qua hành vi focus vào ô tìm kiếm khi nhấn submit
    + Không ẩn menu khi click vào avatar

- Hoàn thiện Header #2:
    + Xử lý thanh cuộn trong menu đa cấp khi có nhiều content
    + Thêm style overlay cho thanh cuộn body
    + Sửa title trang và update favicon 
      - Vào https://www.tiktok.com/favicon.ico save icon về public/favicon_1.ico
    + fix warning thư viện Tippy  
      - Bọc thẻ div bên ngoài Tippy của Search Comp     